A aplicação teve diversos commits na branch MASTER indevidamente. Pois, quando comecei o projeto esqueci de criar a minha branch pessoal, desculpem-me.

Não foi possível desenvolver a aplicação completa. 
Segue abaixo o que foi desenvolvido:
-> CRUD completo de usuários, tela responsiva, API REST
-> API REST para CRUD da entidade "Processo"
-> Começou-se a viabilizar um módulo de segurança com JWT (após algumas pesquisas na internet), mas este ficou incompleto.

## Algumas considerações a respeito de algumas decisões arquiteturais:

SpringBoot -> framework java com a filosofia Convention over Configuration. Facilita a configuração da aplicação e a execução no ambiente DEV. Uma vez que este traz um servidor embarcado.

Liquibase -> Mantém histórico de todas as alterações da estrutura do banco de dados. Facilita o "rollback" de releases, facilidade para gerar script de carga.

LomBok ->  excelente para abstracao de implementação de alguns padrões de projeto, além de acelerar o desenvolvimento e escrita do código.

Swwager -> framework para documentação de API REST.

Angular 6 e Material -> Rapidez no desenvolvimento de telas simples e que não demanda um alto controle do estado dos componentes.


## Pré-requisitos para Dev ##
Node 8, Angular Cli 6, Maven, JDK Java 8, Docker, Docker-Compose, Lombok

## Pré-requisitos para Deploy e Build ## 
Docker, Docker-Compose

## Passo a passo para Deploy ## 
Instalar Docker
Instalar Docker-compose
Download do projeto
Na raiz do projeto executar: docker-compose up --build -d
Após alguns minutos, acessar:
 http://localhost -> Aplicacao
 http://localhost:8080/swagger-ui.html -> API

Obs : caso fonte do client seja alterado, executar ng build, em seguida commit do dist.
caso fonte do server seja alterado, executar npm package, em seguida commit do target.
Necessário ambiente DEV para build do  client e do server

## Stack de desenvolvimento ##
BackEnd: Java 8; Spring Boot, Spring Data, Spring MVC, Spring Security, Lombok, Liquibase, Swagger, JWT
Front: Angular Cli 6, Material, Typescript
Banco de Dados: Postgres
Docker, Docker Compose